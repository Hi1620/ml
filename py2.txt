import pandas as pd
import numpy as np
import matplotlib.pyplot as mtp
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.decomposition import PCA
from sklearn.metrics import confusion_matrix,accuracy_score
from sklearn.linear_model  import LogisticRegression

data=pd.read_csv('wine.csv')
x=data.iloc[:,1:]
y=data["Wine"]
x
y

x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=42)

SC = StandardScaler()
x_train = SC.fit_transform(x_train)
x_test = SC.transform(x_test)

pca = PCA(n_components=2)  # Reducing to 2 components
x_train = pca.fit_transform(x_train)
x_test = pca.transform(x_test)

classifier_1 = LogisticRegression(random_state=42)
classifier_1.fit(x_train, y_train)

y_pred=classifier_1.predict(x_test)
y_pred

cm=confusion_matrix(y_test,y_pred)
cm

accuracy=accuracy_score(y_test,y_pred)
accuracy

from mlxtend.plotting import plot_decision_regions
# Ensure y_train is an integer NumPy array
y_train = np.array(y_train, dtype=np.int_)
# Plot decision regions
plot_decision_regions(x_train, y_train, clf=classifier_1, legend=5)
plt.xlabel("Principal Component 1")
plt.ylabel("Principal Component 2")
plt.title("Decision Regions (Training Set)")
plt.show()
